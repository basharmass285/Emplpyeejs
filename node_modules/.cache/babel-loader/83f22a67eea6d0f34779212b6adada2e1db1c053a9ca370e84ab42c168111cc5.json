{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\batit\\\\OneDrive\\\\Desktop\\\\EmployeeJs\\\\Bashar\\\\app\\\\src\\\\context\\\\EmployeeContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EmployeeContext = /*#__PURE__*/createContext();\nexport const EmployeeProvider = ({\n  children\n}) => {\n  _s();\n  const [employees, setEmployees] = useState(() => {\n    const savedEmployees = localStorage.getItem('employees');\n    return savedEmployees ? JSON.parse(savedEmployees) : [];\n  });\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    localStorage.setItem('employees', JSON.stringify(employees));\n  }, [employees]);\n  const fetchEmployees = async (company = 'google') => {\n    try {\n      const response = await fetch(`https://randomuser.me/api/?results=10&seed=${company}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch employees');\n      }\n      const data = await response.json();\n      const updatedEmployees = data.results.map((employee, index) => ({\n        company,\n        index,\n        details: employee\n      }));\n      setEmployees(updatedEmployees);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(EmployeeContext.Provider, {\n    value: {\n      employees,\n      error,\n      fetchEmployees\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeProvider, \"fllqG/DsfI99XhzR/UFa5Umf4Os=\");\n_c = EmployeeProvider;\nvar _c;\n$RefreshReg$(_c, \"EmployeeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","EmployeeContext","EmployeeProvider","children","_s","employees","setEmployees","savedEmployees","localStorage","getItem","JSON","parse","error","setError","setItem","stringify","fetchEmployees","company","response","fetch","ok","Error","data","json","updatedEmployees","results","map","employee","index","details","message","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/batit/OneDrive/Desktop/EmployeeJs/Bashar/app/src/context/EmployeeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const EmployeeContext = createContext();\n\nexport const EmployeeProvider = ({ children }) => {\n  const [employees, setEmployees] = useState(() => {\n    const savedEmployees = localStorage.getItem('employees');\n    return savedEmployees ? JSON.parse(savedEmployees) : [];\n  });\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    localStorage.setItem('employees', JSON.stringify(employees));\n  }, [employees]);\n\n  const fetchEmployees = async (company = 'google') => {\n    try {\n      const response = await fetch(`https://randomuser.me/api/?results=10&seed=${company}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch employees');\n      }\n      const data = await response.json();\n      const updatedEmployees = data.results.map((employee, index) => ({\n        company,\n        index,\n        details: employee\n      }));\n      setEmployees(updatedEmployees);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <EmployeeContext.Provider value={{ employees, error, fetchEmployees }}>\n      {children}\n    </EmployeeContext.Provider>\n  );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,eAAe,gBAAGL,aAAa,CAAC,CAAC;AAE9C,OAAO,MAAMM,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,MAAM;IAC/C,MAAMU,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACxD,OAAOF,cAAc,GAAGG,IAAI,CAACC,KAAK,CAACJ,cAAc,CAAC,GAAG,EAAE;EACzD,CAAC,CAAC;EACF,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdU,YAAY,CAACM,OAAO,CAAC,WAAW,EAAEJ,IAAI,CAACK,SAAS,CAACV,SAAS,CAAC,CAAC;EAC9D,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMW,cAAc,GAAG,MAAAA,CAAOC,OAAO,GAAG,QAAQ,KAAK;IACnD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8CF,OAAO,EAAE,CAAC;MACrF,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,MAAMC,gBAAgB,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,MAAM;QAC9DX,OAAO;QACPW,KAAK;QACLC,OAAO,EAAEF;MACX,CAAC,CAAC,CAAC;MACHrB,YAAY,CAACkB,gBAAgB,CAAC;IAChC,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACkB,OAAO,CAAC;IACzB;EACF,CAAC;EAED,oBACE9B,OAAA,CAACC,eAAe,CAAC8B,QAAQ;IAACC,KAAK,EAAE;MAAE3B,SAAS;MAAEO,KAAK;MAAEI;IAAe,CAAE;IAAAb,QAAA,EACnEA;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAAChC,EAAA,CAlCWF,gBAAgB;AAAAmC,EAAA,GAAhBnC,gBAAgB;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}